version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
    container_name: nuxt-frontend
    ports:
      - "3001:3000"
    environment:
      NUXT_PORT: 3000
    depends_on:
      - backend
    networks:
      - backend-net

  backend:
    build:
      context: ./backend
    container_name: jobboard-api
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgres://postgres:123@db:5433/nest
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://rabbitmq:5672
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - backend-net

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-reverse
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - backend-net

  db:
    image: postgres:9.6
    container_name: jobboard-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: nest
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
    networks:
      - backend-net

  redis:
    image: redis:7-alpine
    container_name: jobboard-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
    networks:
      - backend-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: jobboard-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics ping"]
      interval: 10s
      retries: 5
    networks:
      - backend-net

volumes:
  pgdata:
  redis-data:

networks:
  backend-net:
